name: CI
on: [push, pull_request]
env:
  API_DEPLOY_PATH: packages/api/dist
  API_INTEG_APP_NAME: ops-suite-api-integration
  API_PROD_APP_NAME: ops-suite-api-prod
  API_DEMO_APP_NAME: ops-suite-api-demo
  WEBAPP_INTEG_STORAGE_ACCOUNT: 'opssuitewebappinteg'
  WEBAPP_PROD_STORAGE_ACCOUNT: 'opssuitewebappprod'
  WEBAPP_DEMO_STORAGE_ACCOUNT: 'opssuitewebappdemo'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: yarn install

      - name: Verification
        run: yarn ci
        env:
          CI: true
          INTEGRATION_TEST_USERNAME: ${{ secrets.INTEGRATION_TEST_USERNAME }}
          INTEGRATION_TEST_PASSWORD: ${{ secrets.INTEGRATION_TEST_PASSWORD }}
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING_INTEG }}

      #
      # Integration Environment Deployments
      #
      - name: Prepare for Deployment (Integ)
        if: matrix.node-version == '14.x' && github.ref == 'refs/heads/dev'
        run: yarn prepare_for_deployment
        env:
          CI: true
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING_INTEG }}

      - name: 'Deploy Integ API'
        if: matrix.node-version == '14.x' && github.ref == 'refs/heads/dev'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.API_INTEG_APP_NAME }}
          package: ${{ env.API_DEPLOY_PATH }}
          publish-profile: ${{ secrets.API_INTEG_PUBLISH_PROFILE }}

      - name: Deploy Integ Webapp
        run: yarn build:webapp:integ && yarn deploy:webapp
        if: matrix.node-version == '14.x' && github.ref == 'refs/heads/dev'
        env:
          CI: true
          WEBAPP_STORAGE_ACCOUNT: ${{ env.WEBAPP_INTEG_STORAGE_ACCOUNT }}
          WEBAPP_STORAGE_KEY: ${{ secrets.WEBAPP_INTEG_STORAGE_KEY }}
          APPLICATION_INSIGHTS_INSTRUMENTATION_KEY: ${{ secrets.WEBAPP_INTEG_APPINSIGHTS_KEY }}
          FIREBASE_API_KEY: ${{ secrets.WEBAPP_FIREBASE_API_KEY }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.WEBAPP_FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.WEBAPP_FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.WEBAPP_FIREBASE_MEASUREMENT_ID }}
          FIREBASE_VAPID_SERVER_KEY: ${{ secrets.WEBAPP_FIREBASE_VAPID_SERVER_KEY }}

      #
      # Demo Environment Deployments
      #
      - name: Prepare for Deployments (Demo)
        if: matrix.node-version == '14.x' && github.ref == 'refs/heads/main'
        run: yarn prepare_for_deployment
        env:
          CI: true
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING_DEMO }}

      - name: 'Deploy Demo API'
        if: matrix.node-version == '14.x' && github.ref == 'refs/heads/main'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.API_DEMO_APP_NAME }}
          package: ${{ env.API_DEPLOY_PATH }}
          publish-profile: ${{ secrets.API_DEMO_PUBLISH_PROFILE }}

      - name: Deploy Demo Webapp
        if: matrix.node-version == '14.x' && github.ref == 'refs/heads/main'
        run: yarn build:webapp:demo && yarn deploy:webapp
        env:
          CI: true
          WEBAPP_STORAGE_ACCOUNT: ${{ env.WEBAPP_DEMO_STORAGE_ACCOUNT }}
          WEBAPP_STORAGE_KEY: ${{ secrets.WEBAPP_DEMO_STORAGE_KEY }}
          APPLICATION_INSIGHTS_INSTRUMENTATION_KEY: ${{ secrets.WEBAPP_DEMO_APPINSIGHTS_KEY }}
          FIREBASE_API_KEY: ${{ secrets.WEBAPP_FIREBASE_API_KEY }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.WEBAPP_FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.WEBAPP_FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.WEBAPP_FIREBASE_MEASUREMENT_ID }}
          FIREBASE_VAPID_SERVER_KEY: ${{ secrets.WEBAPP_FIREBASE_VAPID_SERVER_KEY }}

      #
      # Production Environment Deployments
      #
      - name: Prepare for Deployments (Prod)
        if: matrix.node-version == '14.x' && github.ref == 'refs/heads/main'
        run: yarn prepare_for_deployment
        env:
          CI: true
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING_PROD }}

      - name: 'Deploy Production API'
        if: matrix.node-version == '14.x' && github.ref == 'refs/heads/main'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.API_PROD_APP_NAME }}
          package: ${{ env.API_DEPLOY_PATH }}
          publish-profile: ${{ secrets.API_PROD_PUBLISH_PROFILE }}

      - name: Deploy Production Webapp
        if: matrix.node-version == '14.x' && github.ref == 'refs/heads/main'
        run: yarn build:webapp:prod && yarn deploy:webapp
        env:
          CI: true
          WEBAPP_STORAGE_ACCOUNT: ${{ env.WEBAPP_PROD_STORAGE_ACCOUNT }}
          WEBAPP_STORAGE_KEY: ${{ secrets.WEBAPP_PROD_STORAGE_KEY }}
          APPLICATION_INSIGHTS_INSTRUMENTATION_KEY: ${{ secrets.WEBAPP_PROD_APPINSIGHTS_KEY }}
          FIREBASE_API_KEY: ${{ secrets.WEBAPP_FIREBASE_API_KEY }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.WEBAPP_FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.WEBAPP_FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.WEBAPP_FIREBASE_MEASUREMENT_ID }}
          FIREBASE_VAPID_SERVER_KEY: ${{ secrets.WEBAPP_FIREBASE_VAPID_SERVER_KEY }}

      #- name: Publish coverage to codecov.io
      #  uses: codecov/codecov-action@v1.0.13
      #  with:
      #    token: ${{ secrets.CODECOV_TOKEN }}
